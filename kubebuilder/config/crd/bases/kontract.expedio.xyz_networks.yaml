---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: networks.kontract.expedio.xyz
spec:
  group: kontract.expedio.xyz
  names:
    kind: Network
    listKind: NetworkList
    plural: networks
    singular: network
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Network is the Schema for the networks API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NetworkSpec defines the desired state of Network
            properties:
              blockExplorerRef:
                description: BlockExplorerRef references the BlockExplorer resource
                  to be used for querying blockchain data
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              chainID:
                description: ChainID is the unique identifier for the blockchain network
                  (e.g., 1 for Ethereum Mainnet)
                type: integer
              networkName:
                description: NetworkName is the name of the blockchain network (e.g.,
                  EthereumMainnet)
                type: string
              rpcProviderRef:
                description: RPCProviderRef references the RPCProvider resource to
                  be used for interacting with the blockchain
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - chainID
            - networkName
            - rpcProviderRef
            type: object
          status:
            description: NetworkStatus defines the observed state of Network
            properties:
              blockExplorerEndpoint:
                description: BlockExplorerEndpoint is the endpoint URL for the Block
                  Explorer
                type: string
              healthy:
                description: Healthy indicates whether the network is healthy
                type: boolean
              rpcEndpoint:
                description: RPCEndpoint is the endpoint URL for the RPC provider
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
