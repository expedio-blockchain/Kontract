apiVersion: kontractdeployer.expedio.xyz/v1alpha1
kind: Contract
metadata:
  name: configmap-based-contract
spec:
  contractName: ConfigMapBasedContract
  networkRefs:
    - holesky
  walletRef: dev-wallet
  gasStrategyRef: high-priority-gas
  codeRef:
    name: contract-code-configmap
    key: code
  testRef:
    name: contract-test-configmap
    key: test
  foundryConfigRef:
    name: foundry-config-configmap
    key: foundry.toml

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contract-code-configmap
data:
  code: |
    // SPDX-License-Identifier: MIT
    pragma solidity ^0.8.9;
    contract ConfigMapBasedContract {
      uint128 public value;
      function setValue(uint128 newValue) public {
        value = newValue;
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contract-test-configmap
data:
  test: |
    // SPDX-License-Identifier: MIT
    pragma solidity ^0.8.9;
    import "src/ConfigMapBasedContract.sol";
    contract ConfigMapBasedContractTest {
      ConfigMapBasedContract myContract;
      function setUp() public {
        myContract = new ConfigMapBasedContract();
      }
      function testInitialValue() public {
        myContract.setValue(1);
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: foundry-config-configmap
data:
  foundry.toml: |
    [rpc_endpoints]
    mainnet = "https://eth.llamarpc.com"
    [profile.default]
    src = "src"
    out = "out"
    libs = ["lib"]
    ffi = true
    fs_permissions = [{ access = "read-write", path = ".forge-snapshots/"}]
    solc_version = "0.8.26"
    evm_version = "cancun"
    eth_rpc_url = "https://eth.llamarpc.com"